#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# - name: Prereqs for FreeIPA
#   hosts: ipa
#   become: yes
#   gather_facts: no
#   roles:
#     - prereqs_ipa

- name: Pre-requisites on base DB
  hosts: "{{ database_host }}"
  gather_facts: false
  roles: 
    - role: prereqs_db
      when: not skip_pvc_prereqs
  
- name: Pre-requisites on Open Shift
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  roles: 
    - role: prereqs_oc
      when: not skip_pvc_prereqs and pvc_type == "OC"

- name: Pre-requisites on ECS Nodes
  hosts: pvc
  gather_facts: false
  roles: 
    - role: prereqs_ecs_nodes
      when: not skip_pvc_prereqs and pvc_type == "ECS"

- name: Pre-requisites on ECS Server Node
  hosts: "{{ pvc_ecs_server_host }}"
  gather_facts: false
  roles: 
    - role: prereqs_ecs_server
      when: not skip_pvc_prereqs and pvc_type == "ECS"

- name: Pre-requisites on ECS
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  roles: 
    - role: prereqs_ecs
      when: not skip_pvc_prereqs and pvc_type == "ECS"

- name: Patches for ECS agent
  hosts: pvc
  gather_facts: false
  roles: 
    - role: patch_ecs_agent
      when: not skip_pvc_prereqs and pvc_type == "ECS"

- name: Pre-requisites and fixes for PvC 
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  roles: 
    - role: prereqs
      when: not skip_pvc_prereqs

- name: Setup PvC 
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  roles: 
    - role: cm_config
      when: not skip_pvc_prereqs
    - role: setup_ldap_provider 
      when: not skip_pvc_prereqs

- name: Setup CDP CLI
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  roles: 
    - role: setup_cdpcli
      when: not skip_pvc_prereqs

- name: Setup AWS CLI for Ozone
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: true
  roles: 
    - role: setup_aws_cli
      when: setup_pvc_tools and not skip_pvc_prereqs

- name: Install k9s 
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  roles: 
    - role: setup_k9s
      when: setup_pvc_tools and not skip_pvc_prereqs

- name: Create environments
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  tasks: 
    - name: create envs
      include_role:
        name: create_env
      with_items: "{{ environments }}"
      vars: 
        env: "{{ item }}"
      ignore_errors: yes


### CDW ####
- name: Create Cloudera Data Warehouse
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: true
  tasks: 
    - name: create CDWs
      include_role:
        name: create_cdw
      with_items: "{{ warehouses }}"
      vars: 
        warehouse: "{{ item }}"
      when: cdw | default(false)
      ignore_errors: yes

- name: Create Cloudera Data Vizs
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  tasks: 
    - name: create Data Vizs
      include_role:
        name: create_dataviz
      with_items: "{{ vizs }}"
      vars: 
        viz: "{{ item }}"
      when: dataviz | default(false)
      ignore_errors: yes


#### CDE ####
- name: Create Cloudera Data Engineering
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  tasks: 
    - name: create CDEs
      include_role:
        name: create_cde
      with_items: "{{ virtual_clusters }}"
      vars:
        virtual_cluster: "{{ item }}"
      when: cde | default(false)
      ignore_errors: yes

- name: Sign CDE Certs
  hosts: localhost
  gather_facts: false
  tasks: 
    - name: sign certificates
      include_role:
        name: sign_cde_certs
      with_items: "{{ virtual_clusters }}"
      vars:
        virtual_cluster: "{{ item }}"
      when: cde | default(false)
      ignore_errors: yes

- name: Upload CDE certs
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  tasks: 
    - name: upload certificates
      include_role:
        name: upload_cde_certs
      with_items: "{{ virtual_clusters }}"
      vars:
        virtual_cluster: "{{ item }}"
      when: cde | default(false)
      ignore_errors: yes

- name: Install CDE CLI 
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  roles: 
    - role: setup_cde_cli
      when: setup_pvc_tools and cde | default(false)


#### CML ####
- name: Create Cloudera Machine Learning Registries
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: true
  tasks: 
    - name: create CML Registries
      include_role:
        name: create_cml_registry
      with_items: "{{ ml_registries }}"
      vars: 
        ml_registry: "{{ item }}"
      when: cmlr | default(false)
      ignore_errors: yes


- name: Create Cloudera Machine Learning
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  tasks: 
    - name: create CMLs
      include_role:
        name: create_cml
      with_items: "{{ workspaces }}"
      vars: 
        workspace: "{{ item }}"
      when: cml | default(false)
      ignore_errors: yes

- name: Sign CML certificates
  hosts: localhost
  gather_facts: false
  tasks: 
    - name: sign certificates
      include_role:
        name: sign_cml_certs
      with_items: "{{ workspaces }}"
      vars: 
        workspace: "{{ item }}"
      when: cml | default(false)
      ignore_errors: yes

- name: Upload CML certificates
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  tasks: 
    - name: upload certificates
      include_role:
        name: upload_cml_certs
      with_items: "{{ workspaces }}"
      vars: 
        workspace: "{{ item }}"
      when: cml | default(false)
      ignore_errors: yes

- name: Install cdswctl 
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  roles: 
    - role: setup_cdswctl
      when: setup_pvc_tools and cml | default(false)

### User's Rights ###
- name: Setting up users' rights
  hosts: "{{ cloudera_manager_host }}"
  gather_facts: false
  tasks: 
    - name: setup rights
      include_role:
        name: setup_rights
      with_items: "{{ user_rights }}"
      vars: 
        user: "{{ item }}"
      ignore_errors: yes