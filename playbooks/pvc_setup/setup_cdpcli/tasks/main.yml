#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
- name: Get admin user CRN
  uri:
    url: "{{ pvc_api_call }}/iam/listUsers"
    method: POST
    headers: 
      Content-TYpe: application/json
      Cookie: "{{ all_cookies }}"
    body: "{\"pageSize\":500}"
    status_code: 200
    return_content: yes
    validate_certs: no
  register: list_all_users

- set_fact:
    admin_crn: "{{ list_all_users.json | community.general.json_query(query) }}"
  vars:
    query: "users[?workloadUsername == 'admin' ].crn | [0]"

- name: DEBUG - admin_crn
  debug:
    msg: "{{ admin_crn }}"
  when: debug | default(false)

- name: DEBUG - call to gen acces key
  debug:
    msg: "{{ lookup('template', 'gen_access_key.json') }}"
  when: debug | default(false)


- name: Generate Access Key for admin using API
  uri:
    url: "{{ pvc_api_call }}/iam/createUserAccessKey"
    method: POST
    headers: 
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    body_format: json
    body: "{{ lookup('template', 'gen_access_key.json') }}"
    status_code: 200
    return_content: yes
    validate_certs: no
  register: gen_access_key_answer

- set_fact:
    admin_access_key_id: "{{ gen_access_key_answer.json | community.general.json_query(query) }}"
  vars:
    query: "accessKey.accessKeyId"

- name: DEBUG - admin_access_key_id
  debug:
    msg: "{{ admin_access_key_id }}"
  when: debug | default(false)

- set_fact:
    admin_private_key: "{{ gen_access_key_answer.json | community.general.json_query(query) }}"
  vars:
    query: "privateKey"

- name: DEBUG - admin_private_key
  debug:
    msg: "{{ admin_private_key }}"
  when: debug | default(false)


- name: Remove .cdp directory
  ansible.builtin.file:
    path: ~/.cdp/
    state: absent
    mode: '0750'

- name: Create .cdp directory
  ansible.builtin.file:
    path: ~/.cdp/
    state: directory
    mode: '0750'

- name: Copy CDP config file  
  template:
    src: "cdp_config"
    dest: "~/.cdp/config"

- name: Copy CDP credentials file 
  template:
    src: "cdp_credentials"
    dest: "~/.cdp/credentials"

- set_fact:
    cdp_cli_cmd: "cdp --no-verify-tls "

- set_fact:
    cdp_cli_cmd: "cdp --debug --no-verify-tls "
  when: debug | default(false)

